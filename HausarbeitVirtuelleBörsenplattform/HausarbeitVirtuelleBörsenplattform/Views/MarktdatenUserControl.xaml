<UserControl x:Class="HausarbeitVirtuelleBörsenplattform.Views.MarktdatenUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HausarbeitVirtuelleBörsenplattform.Views"
             xmlns:converters="clr-namespace:HausarbeitVirtuelleBörsenplattform.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Loaded="MarktdatenUserControl_Loaded">

    <!-- Ressourcen für das UserControl -->
    <UserControl.Resources>
        <!-- Converter -->
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <!-- Farben -->
        <Color x:Key="PrimaryColor">#1E40AF</Color>
        <Color x:Key="PrimaryLightColor">#3B82F6</Color>
        <Color x:Key="AccentColor">#10B981</Color>
        <Color x:Key="WarningColor">#F59E0B</Color>
        <Color x:Key="DangerColor">#EF4444</Color>
        <Color x:Key="SuccessColor">#10B981</Color>
        <Color x:Key="BackgroundColor">#F8FAFC</Color>
        <Color x:Key="SurfaceColor">#FFFFFF</Color>
        <Color x:Key="BorderColor">#E2E8F0</Color>
        <Color x:Key="TextDarkColor">#1E293B</Color>
        <Color x:Key="TextMediumColor">#64748B</Color>
        <Color x:Key="TextLightColor">#94A3B8</Color>

        <!-- Brushes -->
        <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
        <SolidColorBrush x:Key="PrimaryLightBrush" Color="{StaticResource PrimaryLightColor}"/>
        <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
        <SolidColorBrush x:Key="WarningBrush" Color="{StaticResource WarningColor}"/>
        <SolidColorBrush x:Key="DangerBrush" Color="{StaticResource DangerColor}"/>
        <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource SuccessColor}"/>
        <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
        <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource SurfaceColor}"/>
        <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>
        <SolidColorBrush x:Key="TextDarkBrush" Color="{StaticResource TextDarkColor}"/>
        <SolidColorBrush x:Key="TextMediumBrush" Color="{StaticResource TextMediumColor}"/>
        <SolidColorBrush x:Key="TextLightBrush" Color="{StaticResource TextLightColor}"/>

        <!-- Style für den Aktualisieren-Button -->
        <Style x:Key="RefreshButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="14,8"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <!-- Refresh-Symbol -->
                                <Path Grid.Column="0" 
                                      Data="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 9h7V2l-2.35 2.35z"
                                      Fill="White"
                                      Width="16"
                                      Height="16"
                                      Stretch="Uniform"
                                      Margin="0,0,8,0"/>
                                <!-- Text -->
                                <ContentPresenter Grid.Column="1" 
                                                 HorizontalAlignment="Center" 
                                                 VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource PrimaryLightBrush}"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="6" ShadowDepth="2" Opacity="0.2" Color="#000000"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#152C6D"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="3" ShadowDepth="1" Opacity="0.15" Color="#000000"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!-- Hier fügen wir den DataTrigger direkt zum Basisstil hinzu -->
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsLoading}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- DataGrid-Styles -->
        <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#F8FAFC"/>
            <Setter Property="Foreground" Value="{StaticResource TextDarkBrush}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="12,10"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Grid>
                            <Border x:Name="HeaderBorder"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}">
                                <Grid Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Grid.Column="0"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Path x:Name="SortArrow" 
                                          Grid.Column="1"
                                          Data="M 0,0 L 5,5 L 10,0" 
                                          Width="8" 
                                          Height="5" 
                                          Visibility="Collapsed"
                                          Stroke="{StaticResource PrimaryBrush}"
                                          StrokeThickness="1.5"
                                          Margin="6,0,0,0"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="SortArrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="5" CenterY="2.5"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="#EFF6FF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border x:Name="CellBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="CellBorder" Property="Background" Value="#EFF6FF"/>
                                <Setter TargetName="CellBorder" Property="BorderBrush" Value="{StaticResource PrimaryLightBrush}"/>
                                <Setter TargetName="CellBorder" Property="BorderThickness" Value="0,0,0,1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CellBorder" Property="Background" Value="#F8FAFC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Status-Banner Styles -->
        <Style x:Key="WarningBannerStyle" TargetType="Border">
            <Setter Property="Background" Value="#FFF7ED"/>
            <Setter Property="BorderBrush" Value="#FDBA74"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="16,12"/>
            <Setter Property="Margin" Value="0,0,0,16"/>
        </Style>

        <!-- Spinner-Stil für Ladeanimation -->
        <Style x:Key="SpinnerStyle" TargetType="Control">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Control">
                        <Canvas Width="24" Height="24">
                            <Ellipse Width="20" Height="20" Canvas.Left="2" Canvas.Top="2" 
                             Stroke="{StaticResource PrimaryLightBrush}" StrokeThickness="3" 
                             Opacity="0.3"/>
                            <Path x:Name="SpinnerPath" 
                          Stroke="{StaticResource PrimaryBrush}" 
                          StrokeThickness="3" 
                          StrokeStartLineCap="Round" 
                          StrokeEndLineCap="Round">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="12,2">
                                            <ArcSegment Size="10,10" Point="12,2" IsLargeArc="True" SweepDirection="Clockwise"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                                <Path.RenderTransform>
                                    <RotateTransform x:Name="SpinnerRotateTransform" CenterX="12" CenterY="12" Angle="0"/>
                                </Path.RenderTransform>
                            </Path>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                <EventTrigger.Actions>
                                    <BeginStoryboard x:Name="SpinnerStoryboard">
                                        <Storyboard>
                                            <DoubleAnimation
                                        Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                        From="0" To="360" Duration="0:0:1"
                                        RepeatBehavior="Forever" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Watchlist Button Style -->
        <Style x:Key="WatchlistButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Path x:Name="StarIcon"
                                      Data="M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.45,13.97L5.82,21L12,17.27Z"
                                      Fill="White"
                                      Width="12"
                                      Height="12"
                                      Margin="0,0,6,0"/>
                                <ContentPresenter />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#0EA5E9"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="5" ShadowDepth="1" Opacity="0.2" Color="#000000"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#0284C7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Empty State Style -->
        <Style x:Key="EmptyStateTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource TextMediumBrush}"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="20"/>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header-Bereich mit Steuerungselementen -->
        <Grid Grid.Row="0" Margin="0,0,0,16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Aktualisieren-Button mit verbessertem Design -->
            <Button Grid.Column="0"
                    Content="Aktualisieren" 
                    Command="{Binding AktualisierenCommand}"
                    Style="{StaticResource RefreshButtonStyle}"/>

            <!-- Status und letzte Aktualisierung -->
            <StackPanel Grid.Column="1" 
                        Orientation="Horizontal" 
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Center"
                        Margin="0,5,0,0">

                <!-- Ladeindikator -->
                <Control Style="{StaticResource SpinnerStyle}" Margin="0,0,8,0">
                    <Control.Visibility>
                        <Binding Path="IsLoading" Converter="{StaticResource BoolToVisibilityConverter}"/>
                    </Control.Visibility>
                </Control>

                <!-- Status-Text mit verbessertem Styling -->
                <Border Background="#F1F5F9" CornerRadius="20" Padding="12,6">
                    <StackPanel Orientation="Horizontal">
                        <Path Data="M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z" 
                              Fill="{StaticResource TextMediumBrush}" 
                              Width="14" 
                              Height="14" 
                              Stretch="Uniform"
                              Margin="0,0,6,0"/>
                        <TextBlock Text="{Binding StatusText}" 
                                   VerticalAlignment="Center"
                                   Foreground="{StaticResource TextMediumBrush}"
                                   FontSize="12"/>

                        <!-- Letzte Aktualisierung -->
                        <TextBlock Text="{Binding LetzteAktualisierung, StringFormat={} | Letzte: {0:HH:mm:ss}}"
                                   VerticalAlignment="Center"
                                   Margin="6,0,0,0"
                                   Foreground="{StaticResource TextMediumBrush}"
                                   FontSize="12"/>

                        <!-- Nächste Aktualisierung -->
                        <TextBlock Text="{Binding NächsteAktualisierung, StringFormat={} | Nächste: {0:HH:mm:ss}}"
                                   VerticalAlignment="Center"
                                   Margin="6,0,0,0"
                                   Foreground="{StaticResource TextMediumBrush}"
                                   FontSize="12"/>
                    </StackPanel>
                </Border>
            </StackPanel>
        </Grid>

        <!-- Fehlerbereich mit verbessertem Design -->
        <Border Grid.Row="1" 
                Style="{StaticResource WarningBannerStyle}"
                Visibility="{Binding HatFehler, Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Warnsymbol -->
                <Border Grid.Column="0" 
                        Width="32" Height="32" 
                        Background="#FFF7ED" 
                        CornerRadius="16" 
                        Margin="0,0,12,0">
                    <Path Data="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"
                          Fill="{StaticResource WarningBrush}"
                          Width="20"
                          Height="20"
                          Stretch="Uniform"/>
                </Border>

                <!-- Fehlermeldung mit besserem Styling -->
                <StackPanel Grid.Column="1">
                    <TextBlock Text="Achtung" 
                               Foreground="#9A3412" 
                               FontWeight="Bold" 
                               FontSize="14" 
                               Margin="0,0,0,4"/>
                    <TextBlock Text="{Binding FehlerText}"
                               TextWrapping="Wrap"
                               Foreground="#9A3412"
                               FontSize="13"/>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Aktien-Tabelle mit verbesserten Stilen -->
        <DataGrid x:Name="AktienDataGrid"
                  Grid.Row="2"
                  ItemsSource="{Binding AktienListe}"
                  SelectedItem="{Binding AusgewählteAktie, Mode=TwoWay}"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  HeadersVisibility="Column"
                  GridLinesVisibility="None"
                  BorderThickness="0"
                  Background="Transparent"
                  RowBackground="White"
                  AlternatingRowBackground="#F7FAFC"
                  HorizontalGridLinesBrush="#EDF2F7"
                  VerticalGridLinesBrush="Transparent"
                  RowHeight="44"
                  VerticalScrollBarVisibility="Auto"
                  SelectionMode="Single"
                  SelectionUnit="FullRow">

            <!-- DataGrid Styles anwenden -->
            <DataGrid.Resources>
                <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource DataGridColumnHeaderStyle}"/>
                <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyle}"/>
            </DataGrid.Resources>

            <!-- Spalten für die DataGrid mit verbesserten Designs -->
            <DataGrid.Columns>
                <!-- Symbol-Spalte -->
                <DataGridTextColumn Header="Symbol" 
                                    Binding="{Binding AktienSymbol}" 
                                    Width="90">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="13"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!-- Name-Spalte -->
                <DataGridTextColumn Header="Name" 
                                    Binding="{Binding AktienName}" 
                                    Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                            <Setter Property="FontSize" Value="13"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!-- Aktueller Preis-Spalte -->
                <DataGridTextColumn Header="Aktueller Preis" 
                                    Binding="{Binding AktuellerPreis, StringFormat={}{0:N2} €, ConverterCulture=de-DE}" 
                                    Width="120">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="FontSize" Value="13"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <!-- Änderung-Spalte mit Farbkodierung über Code-Behind -->
                <DataGridTemplateColumn Header="Änderung" Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Änderung, StringFormat={}{0:+0.00;-0.00;0.00} €, ConverterCulture=de-DE}" 
                                       HorizontalAlignment="Right"
                                       x:Name="ÄnderungTextBlock"
                                       FontSize="13"
                                       Loaded="ÄnderungTextBlock_Loaded"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Änderung-Prozent-Spalte mit Farbkodierung -->
                <DataGridTemplateColumn Header="Änderung %" Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ÄnderungProzent, StringFormat={}{0:+0.00;-0.00;0.00} %, ConverterCulture=de-DE}" 
                                       HorizontalAlignment="Right"
                                       x:Name="ÄnderungProzentTextBlock"
                                       FontSize="13"
                                       FontWeight="SemiBold"
                                       Loaded="ÄnderungProzentTextBlock_Loaded"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Watchlist Button-Spalte -->
                <DataGridTemplateColumn Width="120">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Zur Watchlist" 
                                    Command="{Binding DataContext.WatchlistViewModel.AktieHinzufügenCommand, 
                                             RelativeSource={RelativeSource AncestorType=Window}}" 
                                    CommandParameter="{Binding}"
                                    Style="{StaticResource WatchlistButtonStyle}"
                                    Margin="0,4"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Letzte Aktualisierung-Spalte -->
                <DataGridTemplateColumn Header="Letzte Aktualisierung" Width="150">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <Path Data="M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z"
                                      Fill="{StaticResource TextMediumBrush}"
                                      Width="12"
                                      Height="12"
                                      Margin="0,0,6,0"/>
                                <TextBlock Text="{Binding LetzteAktualisierung, StringFormat={}{0:HH:mm:ss}}" 
                                           Foreground="{StaticResource TextMediumBrush}"
                                           FontSize="12"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

            <!-- Meldung bei leerer Liste mit verbessertem Design -->
            <DataGrid.Style>
                <Style TargetType="DataGrid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding AktienListe.Count}" Value="0">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Grid Background="#F7FAFC" Margin="20">
                                            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <!-- Icon für leere Daten -->
                                                <Border Width="80" Height="80" 
                                                        Background="#F0F9FF" 
                                                        BorderBrush="#BAE6FD" 
                                                        BorderThickness="1"
                                                        CornerRadius="40"
                                                        Margin="0,0,0,20">
                                                    <Path Data="M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM19 18H6c-2.21 0-4-1.79-4-4 0-2.05 1.53-3.76 3.56-3.97l1.07-.11.5-.95C8.08 7.14 9.94 6 12 6c2.62 0 4.88 1.86 5.39 4.43l.3 1.5 1.53.11c1.56.1 2.78 1.41 2.78 2.96 0 1.65-1.35 3-3 3zm-9-3.82l-2.09-2.09L6.5 13.5 10 17l6.01-6.01-1.41-1.41z"
                                                          Fill="{StaticResource PrimaryLightBrush}"
                                                          Width="44"
                                                          Height="44"
                                                          Stretch="Uniform"/>
                                                </Border>

                                                <TextBlock Text="Keine Marktdaten verfügbar" 
                                                           FontSize="20"
                                                           FontWeight="SemiBold"
                                                           HorizontalAlignment="Center"
                                                           Foreground="{StaticResource TextDarkBrush}"
                                                           Margin="0,0,0,10"/>

                                                <TextBlock Style="{StaticResource EmptyStateTextStyle}">
                                                    <Run Text="Bitte klicken Sie auf 'Aktualisieren', um die aktuellen Marktdaten zu laden."/>
                                                    <LineBreak/>
                                                    <Run Text="Die Daten werden automatisch alle paar Minuten aktualisiert."/>
                                                </TextBlock>

                                                <Button Content="Jetzt aktualisieren" 
                                                        Command="{Binding AktualisierenCommand}"
                                                        Style="{StaticResource RefreshButtonStyle}"
                                                        Margin="0,10,0,0"
                                                        Width="180"
                                                        HorizontalAlignment="Center"/>
                                            </StackPanel>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Style>
        </DataGrid>

        <!-- Footer mit Hinweistexten -->
        <Border Grid.Row="3" 
                Background="#F0F9FF" 
                BorderBrush="#BAE6FD" 
                BorderThickness="1" 
                CornerRadius="8" 
                Padding="16" 
                Margin="0,16,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Infosymbol -->
                <Border Grid.Column="0" 
                        Width="36" Height="36" 
                        Background="#DBEAFE" 
                        CornerRadius="18" 
                        Margin="0,0,16,0">
                    <Path Data="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"
                          Fill="{StaticResource PrimaryBrush}"
                          Width="22"
                          Height="22"
                          Stretch="Uniform"/>
                </Border>

                <!-- Hinweistexte -->
                <StackPanel Grid.Column="1">
                    <TextBlock Text="Marktdaten Informationen" 
                               FontWeight="Bold" 
                               FontSize="14" 
                               Foreground="{StaticResource PrimaryBrush}"
                               Margin="0,0,0,8"/>

                    <TextBlock TextWrapping="Wrap"
                               Foreground="{StaticResource TextDarkBrush}"
                               FontSize="12"
                               LineHeight="20">
                        <Run Text="Datenquelle: Twelve Data API | Basic 8 Plan (8 Anfragen pro Minute)"/>
                        <LineBreak/>
                        <Run Text="Es werden nur Aktien aus dem Portfolio und der Watchlist automatisch aktualisiert. Um weitere Aktien zu überwachen, fügen Sie diese zu Ihrer Watchlist hinzu."/>
                    </TextBlock>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl>