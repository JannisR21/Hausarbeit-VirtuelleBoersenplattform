<UserControl x:Class="HausarbeitVirtuelleBörsenplattform.Views.WatchlistUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HausarbeitVirtuelleBörsenplattform.Views"
             xmlns:converters="clr-namespace:HausarbeitVirtuelleBörsenplattform.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1100"
             Width="Auto" Height="Auto"
             HorizontalAlignment="Stretch" 
             VerticalAlignment="Stretch"
             Margin="0">

    <UserControl.Resources>
        <!-- Converter -->
        <converters:GewinnVerlustFarbeConverter x:Key="GewinnVerlustFarbeConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- Farben -->
        <Color x:Key="PrimaryColor">#1E40AF</Color>
        <Color x:Key="SecondaryColor">#3B82F6</Color>
        <Color x:Key="BackgroundColor">#F8FAFC</Color>
        <Color x:Key="SurfaceColor">#FFFFFF</Color>
        <Color x:Key="BorderColor">#E2E8F0</Color>
        <Color x:Key="TextDarkColor">#1E293B</Color>
        <Color x:Key="TextMediumColor">#64748B</Color>
        <Color x:Key="TextLightColor">#94A3B8</Color>
        <Color x:Key="DangerColor">#DC2626</Color>
        <Color x:Key="SuccessColor">#10B981</Color>
        <Color x:Key="InfoColor">#0EA5E9</Color>
        <Color x:Key="WarningColor">#F59E0B</Color>

        <!-- Brushes -->
        <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
        <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}"/>
        <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
        <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource SurfaceColor}"/>
        <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>
        <SolidColorBrush x:Key="TextDarkBrush" Color="{StaticResource TextDarkColor}"/>
        <SolidColorBrush x:Key="TextMediumBrush" Color="{StaticResource TextMediumColor}"/>
        <SolidColorBrush x:Key="TextLightBrush" Color="{StaticResource TextLightColor}"/>
        <SolidColorBrush x:Key="DangerBrush" Color="{StaticResource DangerColor}"/>
        <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource SuccessColor}"/>
        <SolidColorBrush x:Key="InfoBrush" Color="{StaticResource InfoColor}"/>
        <SolidColorBrush x:Key="WarningBrush" Color="{StaticResource WarningColor}"/>

        <!-- Button-Stile -->
        <Style x:Key="ActionButtonStyle" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource SurfaceBrush}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#3B82F6" BlurRadius="6" ShadowDepth="0" Opacity="0.3"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1E3A8A"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#1E3A8A" BlurRadius="4" ShadowDepth="0" Opacity="0.2"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RemoveButtonStyle" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="{StaticResource DangerBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="10,4"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#EF4444"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#EF4444" BlurRadius="6" ShadowDepth="0" Opacity="0.3"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#B91C1C"/>
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#B91C1C" BlurRadius="4" ShadowDepth="0" Opacity="0.2"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid Spalten-Header Style -->
        <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#F8FAFC"/>
            <Setter Property="Foreground" Value="{StaticResource TextDarkBrush}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Padding" Value="8,0"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinHeight" Value="34"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Grid>
                            <Border x:Name="HeaderBorder"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}">
                                <Grid Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter Grid.Column="0"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Path x:Name="SortArrow" 
                                          Grid.Column="1"
                                          Data="M 0,0 L 5,5 L 10,0" 
                                          Width="6" 
                                          Height="3" 
                                          Visibility="Collapsed"
                                          Stroke="{StaticResource SecondaryBrush}"
                                          StrokeThickness="1.5"
                                          Margin="4,0,0,0"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="SortArrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="5" CenterY="2.5"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="#EEF2F7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid Zellen-Style -->
        <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="Padding" Value="8,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border x:Name="CellBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="CellBorder" Property="Background" Value="#EFF6FF"/>
                                <Setter TargetName="CellBorder" Property="BorderBrush" Value="{StaticResource SecondaryBrush}"/>
                                <Setter TargetName="CellBorder" Property="BorderThickness" Value="0,0,0,1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CellBorder" Property="Background" Value="#F1F5F9"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Errorbox-Style -->
        <Style x:Key="ErrorBoxStyle" TargetType="Border">
            <Setter Property="Background" Value="#FEF2F2"/>
            <Setter Property="BorderBrush" Value="#FECACA"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="6"/>
            <Setter Property="Padding" Value="12"/>
            <Setter Property="Margin" Value="0,0,0,16"/>
        </Style>

        <!-- Empty State Container Style -->
        <Style x:Key="EmptyStateContainerStyle" TargetType="Grid">
            <Setter Property="Background" Value="#F8FAFC"/>
            <Setter Property="Margin" Value="0,20,0,20"/>
        </Style>
    </UserControl.Resources>

    <Border Background="{StaticResource BackgroundBrush}" CornerRadius="12" Padding="12" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}" Margin="0">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Header mit Titel und Aktualisieren-Button -->
            <Grid Grid.Row="0" Margin="0,0,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Icon und Titel -->
                <Border Grid.Column="0" 
                        Width="32" Height="32" 
                        Background="{StaticResource SecondaryBrush}" 
                        CornerRadius="6" 
                        Margin="0,0,8,0">
                    <Path Data="M12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2M14 17H12V15H14V17M15.07 11.25L14.17 12.17C13.63 12.71 13.25 13.18 13.09 13.84C13.05 14 13 14.2 13 14.5H11C11 14 11.08 13.5 11.14 13.26C11.34 12.44 11.96 11.79 12.64 11.1L13.41 10.25C13.78 9.88 14 9.5 14 9C14 8.2 13.2 7.5 12 7.5S10 8.2 10 9H8C8 7.29 9.29 5.5 12 5.5S16 7.29 16 9C16 10 15.63 10.63 15.07 11.25Z" 
                          Fill="White" 
                          Width="18" 
                          Height="18" 
                          Stretch="Uniform"/>
                </Border>

                <TextBlock Grid.Column="1" 
                           Text="Watchlist" 
                           FontSize="18" 
                           FontWeight="Bold" 
                           Foreground="{StaticResource TextDarkBrush}" 
                           VerticalAlignment="Center" 
                           Margin="0,0,0,0"/>

                <!-- Aktualisieren-Button -->
                <Button Grid.Column="2"
                        Content="Aktualisieren" 
                        Command="{Binding AktualisierenCommand}"
                        Style="{StaticResource ActionButtonStyle}"
                        Height="28"
                        Padding="10,4"
                        Margin="0,0,0,0">
                    <Button.ContentTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Path Data="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 9h7V2l-2.35 2.35z" 
                                      Fill="White" 
                                      Width="12" 
                                      Height="12" 
                                      Margin="0,0,6,0"/>
                                <TextBlock Text="Aktualisieren" VerticalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </Button.ContentTemplate>
                </Button>
            </Grid>

            <!-- Letzte Aktualisierung und Status -->
            <Grid Grid.Row="1" Margin="0,0,0,8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Status-Tag/Label wenn Fehler -->
                <Border Grid.Column="0" 
                        Background="#FEF3C7" 
                        BorderBrush="#FCD34D" 
                        BorderThickness="1" 
                        CornerRadius="4" 
                        Padding="8,4" 
                        HorizontalAlignment="Left"
                        Visibility="{Binding HatFehler, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <StackPanel Orientation="Horizontal">
                        <Path Data="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z" 
                              Fill="{StaticResource WarningBrush}" 
                              Width="12" 
                              Height="12" 
                              Stretch="Uniform"
                              Margin="0,0,4,0"/>
                        <TextBlock Text="{Binding FehlerText}" 
                                   Foreground="#92400E" 
                                   FontWeight="Medium"
                                   FontSize="11"
                                   VerticalAlignment="Center" 
                                   TextWrapping="Wrap" 
                                   MaxWidth="500"/>
                    </StackPanel>
                </Border>

                <!-- Letzte Aktualisierung -->
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Path Data="M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z" 
                          Fill="{StaticResource TextMediumBrush}" 
                          Width="12" 
                          Height="12" 
                          Stretch="Uniform"
                          VerticalAlignment="Center"
                          Margin="0,0,4,0"/>
                    <TextBlock Text="{Binding LetzteAktualisierung, StringFormat=Letzte Aktualisierung: {0:dd.MM.yyyy HH:mm:ss}}"
                               Foreground="{StaticResource TextMediumBrush}"
                               FontSize="11"
                               VerticalAlignment="Center"/>
                </StackPanel>
            </Grid>

            <!-- Watchlist-Tabelle -->
            <DataGrid Grid.Row="2"
                      x:Name="WatchlistDataGrid"
                      ItemsSource="{Binding WatchlistEintraege}"
                      AutoGenerateColumns="False"
                      IsReadOnly="True"
                      HeadersVisibility="Column"
                      GridLinesVisibility="None"
                      BorderThickness="0"
                      Background="Transparent"
                      RowBackground="{StaticResource SurfaceBrush}"
                      AlternatingRowBackground="#F1F5F9"
                      CanUserSortColumns="True"
                      CanUserResizeColumns="True"
                      RowHeight="34"
                      HorizontalGridLinesBrush="{StaticResource BorderBrush}"
                      VerticalGridLinesBrush="Transparent"
                      ColumnHeaderHeight="34"
                      VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto"
                      SelectionMode="Single">

                <DataGrid.Resources>
                    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource DataGridColumnHeaderStyle}"/>
                    <Style TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellStyle}"/>
                </DataGrid.Resources>

                <DataGrid.Columns>
                    <!-- Symbol-Spalte -->
                    <DataGridTextColumn Header="Symbol" 
                                        Binding="{Binding AktienSymbol}" 
                                        Width="75">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="FontSize" Value="11"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- Name-Spalte -->
                    <DataGridTextColumn Header="Name" 
                                        Binding="{Binding AktienName}" 
                                        Width="*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                <Setter Property="FontWeight" Value="Medium"/>
                                <Setter Property="FontSize" Value="11"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- Kurs beim Hinzufügen-Spalte -->
                    <DataGridTextColumn Header="Kurs beim Hinzufügen" 
                                        Binding="{Binding KursBeimHinzufuegen, StringFormat={}{0:N2} €}" 
                                        Width="120">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                <Setter Property="Foreground" Value="{StaticResource TextMediumBrush}"/>
                                <Setter Property="FontSize" Value="11"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- Aktueller Kurs-Spalte -->
                    <DataGridTextColumn Header="Aktueller Kurs" 
                                        Binding="{Binding AktuellerKurs, StringFormat={}{0:N2} €}" 
                                        Width="100">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="FontSize" Value="11"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- Kursänderung mit farblicher Hervorhebung -->
                    <DataGridTemplateColumn Header="Änderung seit Hinzufügen" Width="140">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock Text="{Binding KursÄnderungProzent, StringFormat={}{0:+0.00;-0.00;0.00}%}" 
                                               Foreground="{Binding KursÄnderungProzent, Converter={StaticResource GewinnVerlustFarbeConverter}}"
                                               FontWeight="SemiBold"
                                               FontSize="11"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Right"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Hinzugefügt am-Spalte -->
                    <DataGridTemplateColumn Header="Hinzugefügt am" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding HinzugefuegtAm, StringFormat={}{0:dd.MM.yyyy HH:mm}}" 
                                           Foreground="{StaticResource TextMediumBrush}"
                                           FontSize="11"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!-- Entfernen-Button-Spalte -->
                    <DataGridTemplateColumn Width="70">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Enf." 
                                        Command="{Binding DataContext.AktieEntfernenCommand, 
                                                 RelativeSource={RelativeSource AncestorType=DataGrid}}" 
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource RemoveButtonStyle}"
                                        Margin="0,3"
                                        Height="24">
                                </Button>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>

                <DataGrid.Style>
                    <Style TargetType="DataGrid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding WatchlistEintraege.Count}" Value="0">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="DataGrid">
                                            <Grid Style="{StaticResource EmptyStateContainerStyle}">
                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                                    <!-- Leere Watchlist-Icon -->
                                                    <Border Width="80" Height="80" 
                                                            Background="{StaticResource BackgroundBrush}" 
                                                            BorderBrush="{StaticResource BorderBrush}" 
                                                            BorderThickness="1" 
                                                            CornerRadius="40"
                                                            Margin="0,0,0,20">
                                                        <Path Data="M12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2M14 17H12V15H14V17M15.07 11.25L14.17 12.17C13.63 12.71 13.25 13.18 13.09 13.84C13.05 14 13 14.2 13 14.5H11C11 14 11.08 13.5 11.14 13.26C11.34 12.44 11.96 11.79 12.64 11.1L13.41 10.25C13.78 9.88 14 9.5 14 9C14 8.2 13.2 7.5 12 7.5S10 8.2 10 9H8C8 7.29 9.29 5.5 12 5.5S16 7.29 16 9C16 10 15.63 10.63 15.07 11.25Z" 
                                                              Fill="{StaticResource SecondaryBrush}" 
                                                              Width="48" 
                                                              Height="48" 
                                                              Stretch="Uniform"/>
                                                    </Border>

                                                    <!-- Leere Watchlist-Text -->
                                                    <TextBlock Text="Ihre Watchlist ist leer" 
                                                               HorizontalAlignment="Center"
                                                               FontSize="20"
                                                               FontWeight="Bold"
                                                               Foreground="{StaticResource TextDarkBrush}"
                                                               Margin="0,0,0,12"/>

                                                    <!-- Leere Watchlist-Beschreibung -->
                                                    <TextBlock Text="Fügen Sie Aktien aus dem Marktdaten-Bereich zu Ihrer Watchlist hinzu, um deren Entwicklung zu verfolgen" 
                                                               HorizontalAlignment="Center"
                                                               TextWrapping="Wrap"
                                                               Width="450"
                                                               TextAlignment="Center"
                                                               FontSize="14"
                                                               Foreground="{StaticResource TextMediumBrush}"
                                                               Margin="0,0,0,20"/>

                                                    <!-- Aktionen -->
                                                    <Button Command="{Binding AktualisierenCommand}"
                                                            Style="{StaticResource ActionButtonStyle}"
                                                            HorizontalAlignment="Center"
                                                            Padding="20,10">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Path Data="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 9h7V2l-2.35 2.35z" 
                                                                  Fill="White" 
                                                                  Width="16" 
                                                                  Height="16" 
                                                                  Margin="0,0,8,0"/>
                                                            <TextBlock Text="Marktdaten aktualisieren" VerticalAlignment="Center"/>
                                                        </StackPanel>
                                                    </Button>
                                                </StackPanel>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Style>
            </DataGrid>

            <!-- Hinweistext -->
            <Border Grid.Row="3" 
                    Background="#EFF6FF" 
                    BorderBrush="#BFDBFE" 
                    BorderThickness="1" 
                    CornerRadius="6" 
                    Padding="8" 
                    Margin="0,8,0,0">
                <StackPanel Orientation="Horizontal">
                    <Path Data="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z" 
                          Fill="{StaticResource InfoBrush}" 
                          Width="14" 
                          Height="14" 
                          Stretch="Uniform"
                          Margin="0,0,8,0"
                          VerticalAlignment="Top"/>
                    <TextBlock Text="Aktien in der Watchlist werden nicht automatisch gekauft oder verkauft. Nutzen Sie den 'Aktienhandel'-Button, um Transaktionen durchzuführen."
                               Foreground="#1E40AF"
                               FontSize="10"
                               TextWrapping="Wrap"
                               LineHeight="14"/>
                </StackPanel>
            </Border>
        </Grid>
    </Border>
</UserControl>