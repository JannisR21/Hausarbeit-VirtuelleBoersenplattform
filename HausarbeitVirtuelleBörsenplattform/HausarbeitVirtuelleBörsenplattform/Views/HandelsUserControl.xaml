<UserControl x:Class="HausarbeitVirtuelleBörsenplattform.Views.HandelsUserControl" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:helpers="clr-namespace:HausarbeitVirtuelleBörsenplattform.Helpers" 
             xmlns:converters="clr-namespace:HausarbeitVirtuelleBörsenplattform.Converters" 
             xmlns:local="clr-namespace:HausarbeitVirtuelleBörsenplattform" 
             Background="Transparent" 
             Loaded="HandelsUserControl_Loaded">
    <UserControl.Resources>
        <!-- Converter für IsKauf-Umkehrung -->
        <converters:BooleanToBooleanInverterConverter x:Key="BooleanInverterConverter"/>

        <!-- Style für den Ausführen-Button -->
        <Style x:Key="ExecuteButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="#2c3e50"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="0,15,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#34495e"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1a2530"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style für Anzahl-Steuerung -->
        <Style x:Key="QuantityButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="28"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Background" Value="#e0e0e0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#cccccc"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#bbbbbb"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style für Loading-Indikator -->
        <Style x:Key="LoadingSpinnerStyle" TargetType="Control">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Control">
                        <Grid>
                            <Ellipse Width="{TemplateBinding Width}" 
                                     Height="{TemplateBinding Height}" 
                                     Stroke="#2c3e50" 
                                     StrokeThickness="2" 
                                     Opacity="0.3"/>
                            <Path x:Name="Spinner" 
                                  Stroke="#2c3e50" 
                                  StrokeThickness="2" 
                                  StrokeStartLineCap="Round" 
                                  Opacity="1">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="10,2">
                                            <ArcSegment Point="10,2" IsLargeArc="True" Size="8,8" SweepDirection="Clockwise"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                                <Path.RenderTransform>
                                    <RotateTransform x:Name="SpinnerRotate" CenterX="10" CenterY="10" Angle="0"/>
                                </Path.RenderTransform>
                                <Path.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="SpinnerRotate" 
                                                                Storyboard.TargetProperty="Angle" 
                                                                From="0" To="360" Duration="0:0:1" 
                                                                RepeatBehavior="Forever"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Path.Triggers>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Border Padding="20" Background="White" CornerRadius="8">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <!-- Überschrift -->
                <RowDefinition Height="*"/>
                <!-- Formular -->
            </Grid.RowDefinitions>

            <!-- Überschrift -->
            <TextBlock Grid.Row="0" Text="Aktienhandel" 
                       FontSize="18" FontWeight="Bold" 
                       Foreground="#2c3e50" 
                       Margin="0,0,0,20"/>

            <!-- Hauptinhalt: Formular -->
            <StackPanel Grid.Row="1">
                <!-- Auswahl der Aktie mit Suche -->
                <Grid Margin="0,0,0,15">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Suchfilter für die ComboBox -->
                    <TextBox Grid.Row="0" 
                             Text="{Binding SuchText, UpdateSourceTrigger=PropertyChanged}" 
                             Height="35" 
                             Padding="8,4" 
                             VerticalContentAlignment="Center"
                             helpers:WatermarkHelper.WatermarkText="Suchen Sie nach Aktien (z.B. 'Apple' oder 'AAPL')"
                             Margin="0,0,0,5"/>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Verbesserte ComboBox mit SelectedItem-Bindung und Filterung -->
                        <ComboBox Grid.Column="0" x:Name="aktienComboBox" 
                              ItemsSource="{Binding GefilterteAktienListe}" 
                              SelectedItem="{Binding SelectedAktie, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                              IsEditable="True" 
                              Height="35" 
                              Padding="8,4" 
                              VerticalContentAlignment="Center" 
                              StaysOpenOnEdit="True" 
                              IsTextSearchEnabled="True"
                              TextSearch.TextPath="AktienSymbol"
                              Text="{Binding AktienSymbol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              MaxDropDownHeight="300"
                              SelectionChanged="AktienComboBox_SelectionChanged">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding AktienSymbol}" 
                           FontWeight="Bold" 
                           Margin="0,0,5,0"/>
                                        <TextBlock Text=" - "/>
                                        <TextBlock Text="{Binding AktienName}" 
                           Margin="5,0,0,0" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <!-- Such-Button -->
                        <Button Grid.Column="1" 
                                Content="Suchen" 
                                Command="{Binding AktienSuchenCommand}" 
                                Height="35" 
                                Width="80" 
                                Margin="5,0,0,0" 
                                Background="#2c3e50" 
                                Foreground="White" 
                                BorderThickness="0"/>
                    </Grid>
                </Grid>

                <!-- Name & Kursinformationen -->
                <Border Background="#f8f9fa" Padding="15" CornerRadius="6" Margin="0,0,0,15">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Name -->
                        <TextBlock Grid.Row="0" Grid.Column="0" 
                                Text="{Binding AktienName}" 
                                FontWeight="SemiBold" 
                                FontSize="14"/>

                        <!-- Loading-Indikator, nur sichtbar während der Aktualisierung -->
                        <Control Grid.Row="0" Grid.Column="1" Style="{StaticResource LoadingSpinnerStyle}" 
                                 Margin="0,0,10,0" HorizontalAlignment="Right">
                            <Control.Visibility>
                                <Binding Path="IsLoading" Converter="{StaticResource ResourceKey=BooleanToVisibilityConverter}"/>
                            </Control.Visibility>
                        </Control>

                        <!-- Aktueller Kurs -->
                        <TextBlock Grid.Row="0" Grid.Column="1" 
                                Text="{Binding AktuellerKurs, StringFormat={}{0:N2} €}" 
                                FontWeight="Bold" 
                                FontSize="16" 
                                Foreground="#2c3e50">
                            <TextBlock.Visibility>
                                <Binding Path="IsLoading" Converter="{StaticResource ResourceKey=InverseVisibilityConverter}"/>
                            </TextBlock.Visibility>
                        </TextBlock>

                        <!-- Infotext -->
                        <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" 
                                Text="Wählen Sie eine Aktie aus, um Details anzuzeigen" 
                                Foreground="#666" 
                                FontStyle="Italic" 
                                Margin="0,5,0,0">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsAktieAusgewählt}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </Border>

                <!-- Kauf/Verkauf Auswahl -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="0" 
                           Background="#f1f8e9" 
                           CornerRadius="6,0,0,6" 
                           Margin="0,0,1,0">
                        <RadioButton Content="Kaufen" 
                                   IsChecked="{Binding IsKauf, Mode=TwoWay}" 
                                   HorizontalAlignment="Center" 
                                   Padding="10,8"/>
                    </Border>

                    <Border Grid.Column="1" 
                           Background="#f8f9fa" 
                           CornerRadius="0,6,6,0" 
                           Margin="1,0,0,0">
                        <!-- Hier verwenden wir den BooleanInverterConverter -->
                        <RadioButton Content="Verkaufen" 
                                   IsChecked="{Binding IsKauf, Mode=TwoWay, Converter={StaticResource BooleanInverterConverter}}" 
                                   HorizontalAlignment="Center" 
                                   Padding="10,8"/>
                    </Border>
                </Grid>

                <!-- Menge -->
                <Grid Margin="0,0,0,15">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Text="Anzahl der Aktien:" Margin="0,0,0,5" FontWeight="Medium"/>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Minus-Button -->
                        <Button Grid.Column="0" Content="-" 
                                Command="{Binding DecrementMengeCommand}" 
                                Style="{StaticResource QuantityButtonStyle}"/>

                        <!-- Textfeld -->
                        <TextBox Grid.Column="1" 
                                Text="{Binding Menge, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                Height="28" 
                                TextAlignment="Center" 
                                VerticalContentAlignment="Center" 
                                Margin="5,0"/>

                        <!-- Plus-Button -->
                        <Button Grid.Column="2" Content="+" 
                                Command="{Binding IncrementMengeCommand}" 
                                Style="{StaticResource QuantityButtonStyle}"/>
                    </Grid>
                </Grid>

                <!-- Wertberechnung -->
                <Grid Margin="0,0,0,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="Gesamtwert:" 
                               FontWeight="Medium" 
                               VerticalAlignment="Center"/>

                    <TextBlock Grid.Column="1" 
                               Text="{Binding Gesamtwert, StringFormat={}{0:N2} €}" 
                               FontWeight="Bold" 
                               FontSize="16"/>
                </Grid>

                <!-- Verfügbare Aktien im Portfolio (nur beim Verkauf) -->
                <Border Background="#f1f8e9" 
                        Padding="10" 
                        CornerRadius="6" 
                        Margin="0,0,0,15">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsKauf}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <StackPanel>
                        <TextBlock Text="Verfügbare Aktien im Portfolio:" 
                                   FontWeight="Medium" 
                                   Margin="0,0,0,5"/>
                        <TextBlock Text="{Binding VerfügbareAktien, StringFormat=Sie besitzen {0} Aktien von diesem Wertpapier}"/>
                    </StackPanel>
                </Border>

                <!-- Warnung (wenn nicht genug Geld oder Aktien) -->
                <Border Background="#ffebee" 
                        Padding="10" 
                        CornerRadius="6" 
                        Margin="0,0,0,15">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ZeigeWarnung}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="⚠️" FontSize="16" Margin="0,0,5,0" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding WarnungsText}" TextWrapping="Wrap"/>
                    </StackPanel>
                </Border>

                <!-- Button -->
                <Button Content="{Binding TransaktionsText}" 
                        Command="{Binding TransaktionAusführenCommand}" 
                        Style="{StaticResource ExecuteButtonStyle}" 
                        Width="180"/>
            </StackPanel>
        </Grid>
    </Border>
</UserControl>