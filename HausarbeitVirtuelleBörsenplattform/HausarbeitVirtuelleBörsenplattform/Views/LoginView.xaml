<UserControl x:Class="HausarbeitVirtuelleBörsenplattform.Views.LoginView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HausarbeitVirtuelleBörsenplattform.Views"
             xmlns:viewmodels="clr-namespace:HausarbeitVirtuelleBörsenplattform.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="900">

    <UserControl.DataContext>
        <viewmodels:LoginViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <!-- Stil für die animierten Linien -->
        <Style x:Key="ChartLineStyle" TargetType="Path">
            <Setter Property="Stroke" Value="White"/>
            <Setter Property="StrokeThickness" Value="1"/>
            <Setter Property="Opacity" Value="0.2"/>
            <Setter Property="Stretch" Value="Fill"/>
            <Setter Property="Data">
                <Setter.Value>
                    <PathGeometry>M0,50 L10,45 L20,60 L30,40 L40,55 L50,35 L60,50 L70,30 L80,45 L90,25 L100,40</PathGeometry>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Stil für die Funktion-Features der Plattform -->
        <Style x:Key="FeatureItemStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="0,8,0,8"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <!-- Stil für den Login-Button -->
        <Style x:Key="LoginButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="#2c3e50"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#34495e"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1a2530"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Stil für Hyperlink-Button -->
        <Style x:Key="HyperlinkButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#3498db"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#2980b9"/>
                                <Setter Property="TextBlock.TextDecorations" Value="Underline"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.Effect>
            <DropShadowEffect BlurRadius="20" ShadowDepth="5" Opacity="0.2"/>
        </Grid.Effect>

        <Border CornerRadius="8" 
                Background="White" 
                ClipToBounds="True">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <!-- Linke Seite: Visualisierung -->
                    <ColumnDefinition Width="1*"/>
                    <!-- Rechte Seite: Login-Formular -->
                </Grid.ColumnDefinitions>

                <!-- Linke Seite - Visualisierung und Features -->
                <Grid Grid.Column="0" Background="#2c3e50">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Logo und Titel -->
                    <TextBlock Grid.Row="0" 
                           Text="Virtuelle Börsenplattform" 
                           Foreground="White" 
                           FontSize="24" 
                           FontWeight="Bold" 
                           Margin="30,40,30,20"
                           HorizontalAlignment="Center"/>

                    <!-- Slogan -->
                    <TextBlock Grid.Row="1" 
                           Text="Ihr Portal zur simulierten Finanzwelt.&#10;Handeln Sie ohne Risiko, lernen Sie mit Freude." 
                           Foreground="White" 
                           FontSize="14" 
                           Margin="30,0,30,30" 
                           TextAlignment="Center" 
                           LineHeight="24"/>

                    <!-- Features Liste -->
                    <StackPanel Grid.Row="2" Margin="40,20,40,20">
                        <StackPanel Orientation="Horizontal" Margin="0,8,0,8">
                            <TextBlock Text="✓" Foreground="#2ecc71" FontWeight="Bold" Margin="0,0,10,0"/>
                            <TextBlock Text="Virtuelle Portfolioverwaltung" Style="{StaticResource FeatureItemStyle}"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,8,0,8">
                            <TextBlock Text="✓" Foreground="#2ecc71" FontWeight="Bold" Margin="0,0,10,0"/>
                            <TextBlock Text="Live-Kursdaten von realen Märkten" Style="{StaticResource FeatureItemStyle}"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,8,0,8">
                            <TextBlock Text="✓" Foreground="#2ecc71" FontWeight="Bold" Margin="0,0,10,0"/>
                            <TextBlock Text="Risikofrei traden und lernen" Style="{StaticResource FeatureItemStyle}"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Margin="0,8,0,8">
                            <TextBlock Text="✓" Foreground="#2ecc71" FontWeight="Bold" Margin="0,0,10,0"/>
                            <TextBlock Text="Detaillierte Performanceanalyse" Style="{StaticResource FeatureItemStyle}"/>
                        </StackPanel>
                    </StackPanel>

                    <!-- Animierte Hintergrund-Elemente -->
                    <Canvas Grid.Row="3" Height="150" ClipToBounds="True">
                        <Path Style="{StaticResource ChartLineStyle}" Canvas.Bottom="30" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}}">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="1"/>
                                    <TranslateTransform Y="0"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                            <Path.Triggers>
                                <EventTrigger RoutedEvent="Path.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation 
                                                Storyboard.TargetProperty="RenderTransform.Children[1].Y"
                                                From="0" To="10" Duration="0:0:3"
                                                AutoReverse="True" RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Path.Triggers>
                        </Path>

                        <Path Style="{StaticResource ChartLineStyle}" Canvas.Bottom="60" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}}">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="1"/>
                                    <TranslateTransform Y="0"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                            <Path.Triggers>
                                <EventTrigger RoutedEvent="Path.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation 
                                                Storyboard.TargetProperty="RenderTransform.Children[1].Y"
                                                From="0" To="8" Duration="0:0:4"
                                                AutoReverse="True" RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Path.Triggers>
                        </Path>

                        <Path Style="{StaticResource ChartLineStyle}" Canvas.Bottom="90" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}}">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="1"/>
                                    <TranslateTransform Y="0"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                            <Path.Triggers>
                                <EventTrigger RoutedEvent="Path.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation 
                                                Storyboard.TargetProperty="RenderTransform.Children[1].Y"
                                                From="0" To="12" Duration="0:0:5"
                                                AutoReverse="True" RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Path.Triggers>
                        </Path>
                    </Canvas>
                </Grid>

                <!-- Rechte Seite - Login-Formular -->
                <Grid Grid.Column="1" Margin="40,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Login-Header -->
                    <StackPanel Grid.Row="0" Margin="0,60,0,20">
                        <TextBlock Text="Willkommen zurück" 
                               FontSize="24" 
                               FontWeight="SemiBold" 
                               Foreground="#2c3e50" 
                               HorizontalAlignment="Center"/>
                        <TextBlock Text="Bitte melden Sie sich an, um fortzufahren" 
                               FontSize="14" 
                               Foreground="#777777" 
                               HorizontalAlignment="Center" 
                               Margin="0,8,0,0"/>
                    </StackPanel>

                    <!-- Login-Formular -->
                    <StackPanel Grid.Row="1" VerticalAlignment="Center">
                        <!-- Fehlermeldung -->
                        <Border Background="#ffebee" 
                            BorderBrush="#e57373" 
                            BorderThickness="1" 
                            CornerRadius="8" 
                            Padding="15" 
                            Margin="0,0,0,20">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HasError}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <TextBlock Text="{Binding ErrorMessage}" 
                                   Foreground="#d32f2f" 
                                   TextWrapping="Wrap"/>
                        </Border>

                        <!-- Benutzername/E-Mail -->
                        <StackPanel Margin="0,0,0,20">
                            <TextBlock Text="E-Mail oder Benutzername" 
                               Foreground="#333333" 
                               FontWeight="Medium" 
                               Margin="0,0,0,8"/>
                            <TextBox Text="{Binding Username, UpdateSourceTrigger=PropertyChanged}"
                             Height="40"
                             Padding="12,0"
                             VerticalContentAlignment="Center"
                             BorderThickness="1"
                             BorderBrush="#DDDDDD"/>
                        </StackPanel>

                        <!-- Passwort -->
                        <StackPanel Margin="0,0,0,20">
                            <TextBlock Text="Passwort" 
                               Foreground="#333333" 
                               FontWeight="Medium" 
                               Margin="0,0,0,8"/>
                            <Grid>
                                <!-- Standard-PasswordBox (wird angezeigt, wenn IsPasswordVisible false ist) -->
                                <PasswordBox x:Name="PasswordBox"
                                     Height="40"
                                     Padding="12,0"
                                     VerticalContentAlignment="Center"
                                     BorderThickness="1"
                                     BorderBrush="#DDDDDD"
                                     PasswordChanged="PasswordBox_PasswordChanged">
                                    <PasswordBox.Style>
                                        <Style TargetType="PasswordBox">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsPasswordVisible}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </PasswordBox.Style>
                                </PasswordBox>

                                <!-- TextBox für sichtbares Passwort (wird angezeigt, wenn IsPasswordVisible true ist) -->
                                <TextBox x:Name="PasswordTextBox"
                                 Height="40"
                                 Padding="12,0"
                                 VerticalContentAlignment="Center"
                                 BorderThickness="1"
                                 BorderBrush="#DDDDDD"
                                 Text="{Binding Password, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsPasswordVisible}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>

                                <!-- Auge-Symbol zum Umschalten der Passwort-Sichtbarkeit -->
                                <Button HorizontalAlignment="Right" 
                                        VerticalAlignment="Center" 
                                        Margin="0,0,5,0"
                                        Background="Transparent" 
                                        BorderThickness="0"
                                        Command="{Binding TogglePasswordVisibilityCommand}">
                                    <TextBlock Text="👁️" FontSize="14"/>
                                </Button>
                            </Grid>
                        </StackPanel>

                        <!-- Optionen -->
                        <Grid Margin="0,0,0,30">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!-- Angemeldet bleiben -->
                            <CheckBox Grid.Column="0" 
                                  Content="Angemeldet bleiben" 
                                  IsChecked="{Binding RememberMe}" 
                                  VerticalAlignment="Center"/>

                            <!-- Passwort vergessen -->
                            <Button Grid.Column="1" 
                                Content="Passwort vergessen?" 
                                HorizontalAlignment="Right"
                                Style="{StaticResource HyperlinkButtonStyle}"
                                Command="{Binding ForgotPasswordCommand}"/>
                        </Grid>

                        <!-- Login-Button -->
                        <Button Content="Anmelden" 
                            Style="{StaticResource LoginButtonStyle}"
                            Command="{Binding LoginCommand}"/>

                        <!-- Registrierung -->
                        <StackPanel Orientation="Horizontal" 
                                HorizontalAlignment="Center" 
                                Margin="0,20,0,0">
                            <TextBlock Text="Noch kein Konto? " 
                                   Foreground="#777777" 
                                   VerticalAlignment="Center"/>
                            <Button Content="Jetzt registrieren" 
                                Style="{StaticResource HyperlinkButtonStyle}"
                                Command="{Binding RegisterCommand}"/>
                        </StackPanel>
                    </StackPanel>

                    <!-- Version und Copyright am unteren Rand -->
                    <TextBlock Grid.Row="2" 
                           Text="© 2025 Virtuelle Börsenplattform | Version 1.0" 
                           Foreground="#999999" 
                           FontSize="11" 
                           HorizontalAlignment="Center"
                           Margin="0,0,0,20"/>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</UserControl>